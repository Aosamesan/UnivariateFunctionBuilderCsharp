//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/aosamesan/RiderProjects/EquationSolver/EquationSolver/Pattern/EquationGrammar.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace EquationSolver.Pattern {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IEquationGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class EquationGrammarBaseListener : IEquationGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] EquationGrammarParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] EquationGrammarParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.addition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddition([NotNull] EquationGrammarParser.AdditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.addition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddition([NotNull] EquationGrammarParser.AdditionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.modulus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModulus([NotNull] EquationGrammarParser.ModulusContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.modulus"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModulus([NotNull] EquationGrammarParser.ModulusContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.multiplication"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplication([NotNull] EquationGrammarParser.MultiplicationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.multiplication"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplication([NotNull] EquationGrammarParser.MultiplicationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.power_without_percentage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPower_without_percentage([NotNull] EquationGrammarParser.Power_without_percentageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.power_without_percentage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPower_without_percentage([NotNull] EquationGrammarParser.Power_without_percentageContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPower([NotNull] EquationGrammarParser.PowerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPower([NotNull] EquationGrammarParser.PowerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.signed_atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSigned_atom([NotNull] EquationGrammarParser.Signed_atomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.signed_atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSigned_atom([NotNull] EquationGrammarParser.Signed_atomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.atom_without_percentage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom_without_percentage([NotNull] EquationGrammarParser.Atom_without_percentageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.atom_without_percentage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom_without_percentage([NotNull] EquationGrammarParser.Atom_without_percentageContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtom([NotNull] EquationGrammarParser.AtomContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.atom"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtom([NotNull] EquationGrammarParser.AtomContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.variable_with_scalar_product"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_with_scalar_product([NotNull] EquationGrammarParser.Variable_with_scalar_productContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.variable_with_scalar_product"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_with_scalar_product([NotNull] EquationGrammarParser.Variable_with_scalar_productContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.variable_with_power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_with_power([NotNull] EquationGrammarParser.Variable_with_powerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.variable_with_power"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_with_power([NotNull] EquationGrammarParser.Variable_with_powerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.factorial"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactorial([NotNull] EquationGrammarParser.FactorialContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.factorial"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactorial([NotNull] EquationGrammarParser.FactorialContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.percentage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPercentage([NotNull] EquationGrammarParser.PercentageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.percentage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPercentage([NotNull] EquationGrammarParser.PercentageContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.functional"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctional([NotNull] EquationGrammarParser.FunctionalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.functional"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctional([NotNull] EquationGrammarParser.FunctionalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_name([NotNull] EquationGrammarParser.Function_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_name([NotNull] EquationGrammarParser.Function_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] EquationGrammarParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] EquationGrammarParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] EquationGrammarParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] EquationGrammarParser.VariableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="EquationGrammarParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] EquationGrammarParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="EquationGrammarParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] EquationGrammarParser.ConstantContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace EquationSolver.Pattern
